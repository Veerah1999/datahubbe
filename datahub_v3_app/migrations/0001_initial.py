# Generated by Django 4.1.3 on 2023-07-10 07:44

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=255)),
                ('alternate_phonenumber', models.CharField(blank=True, max_length=15)),
                ('addressline_one', models.CharField(max_length=100)),
                ('addressline_two', models.CharField(blank=True, max_length=100)),
                ('countryor_city', models.CharField(max_length=100)),
                ('postalcode', models.CharField(max_length=100)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('company_type', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'register',
            },
        ),
        migrations.CreateModel(
            name='audit_log',
            fields=[
                ('audit_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('run_id', models.IntegerField()),
                ('schedule_id', models.IntegerField()),
                ('start_time', models.DateField(auto_now=True)),
                ('status', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'audit_log',
            },
        ),
        migrations.CreateModel(
            name='conn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('logo_name', models.CharField(max_length=100)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('key_param', models.JSONField()),
                ('d_type', models.JSONField()),
            ],
            options={
                'db_table': 'conn',
            },
        ),
        migrations.CreateModel(
            name='connection_detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_detail', models.CharField(max_length=100)),
                ('con_str', models.JSONField()),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('last_modified_by', models.CharField(max_length=100, null=True)),
                ('last_modified_on', models.DateField(auto_now=True, null=True)),
                ('created_on', models.DateField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('connection_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connection_id', to='datahub_v3_app.conn')),
            ],
            options={
                'db_table': 'connection_detail',
            },
        ),
        migrations.CreateModel(
            name='db_config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_name', models.CharField(max_length=100)),
                ('desc', models.CharField(max_length=100)),
                ('source_connection_name', models.CharField(max_length=100)),
                ('target_connection_name', models.CharField(max_length=100)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('Source_conn_det_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Source_conn_det_id', to='datahub_v3_app.connection_detail')),
                ('Target_conn_det_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Target_conn_det_id', to='datahub_v3_app.connection_detail')),
            ],
            options={
                'db_table': 'db_config',
            },
        ),
        migrations.CreateModel(
            name='db_sql_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_name', models.CharField(max_length=200)),
                ('sequelize_query', models.CharField(max_length=2000)),
                ('sql_validation', models.CharField(max_length=200)),
                ('sql_status', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'db_sql_extract',
            },
        ),
        migrations.CreateModel(
            name='error_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.IntegerField()),
                ('schedule_id', models.IntegerField()),
                ('start_time', models.DateField(auto_now=True)),
                ('status', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'error_log',
            },
        ),
        migrations.CreateModel(
            name='f_pass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
                ('otp', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'f_pass',
            },
        ),
        migrations.CreateModel(
            name='google_login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=300)),
                ('authus', models.CharField(max_length=300)),
                ('email', models.EmailField(max_length=254)),
                ('email_verified', models.BooleanField()),
                ('expired_on', models.IntegerField()),
                ('family_name', models.CharField(max_length=300)),
                ('given_name', models.CharField(max_length=300)),
                ('locale', models.CharField(max_length=300)),
                ('name', models.CharField(max_length=300)),
                ('picture', models.ImageField(upload_to=None)),
                ('prompt', models.CharField(max_length=300)),
                ('scope', models.CharField(max_length=300)),
                ('sub', models.CharField(max_length=300)),
                ('token_type', models.CharField(max_length=300)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'google_login',
            },
        ),
        migrations.CreateModel(
            name='migration_log',
            fields=[
                ('mid_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('schema_migration_id', models.IntegerField()),
                ('source_connection_id', models.IntegerField()),
                ('target_connection_id', models.IntegerField()),
                ('source_schema_name', models.CharField(max_length=200)),
                ('table_name', models.CharField(max_length=300)),
                ('column_name', models.CharField(max_length=500)),
                ('data_type', models.CharField(max_length=300)),
                ('original_position', models.IntegerField()),
                ('target_datatype', models.CharField(max_length=400, null=True)),
                ('data_masking_column', models.CharField(max_length=300, null=True)),
                ('row_count', models.IntegerField()),
            ],
            options={
                'db_table': 'migration_log',
            },
        ),
        migrations.CreateModel(
            name='pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_name', models.CharField(blank=True, max_length=300, null=True)),
                ('module_name', models.CharField(max_length=300, null=True)),
                ('page_desc', models.CharField(blank=True, max_length=300, null=True)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('created_by', models.CharField(max_length=300, null=True)),
                ('created_on', models.CharField(max_length=300, null=True)),
            ],
            options={
                'db_table': 'pages',
            },
        ),
        migrations.CreateModel(
            name='pipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_name', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('Description', models.CharField(blank=True, max_length=30)),
                ('configuration_name', models.CharField(blank=True, max_length=30)),
                ('Start_date', models.DateField()),
                ('End_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_config')),
            ],
            options={
                'db_table': 'pipeline',
            },
        ),
        migrations.CreateModel(
            name='pipeline_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_detail_name', models.CharField(max_length=100)),
                ('pipeline_dtls_desc', models.CharField(max_length=100, null=True)),
                ('pipeline_name', models.CharField(max_length=100)),
                ('sql_extract_name', models.CharField(blank=True, max_length=100, null=True)),
                ('source_table_name', models.CharField(max_length=100)),
                ('target_table_name', models.CharField(max_length=100)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('status', models.BooleanField(default=True)),
                ('last_modified_by', models.CharField(max_length=100, null=True)),
                ('last_modified_on', models.DateField(auto_now=True, null=True)),
                ('created_on', models.DateField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('pipeline_dtls_truncate_load', models.CharField(max_length=100, null=True)),
                ('pipeline_dtls_bench_mark_commit', models.CharField(max_length=100, null=True)),
                ('pipeline_dtls_parallel_load_allowed', models.CharField(max_length=100, null=True)),
                ('pipeline_dtls_parallel_thread_count', models.CharField(max_length=100, null=True)),
                ('pipeline_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipeline_id', to='datahub_v3_app.pipeline')),
                ('sql_extract_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sql_extract_id', to='datahub_v3_app.db_sql_table')),
            ],
            options={
                'db_table': 'pipeline_details',
            },
        ),
        migrations.CreateModel(
            name='pipeline_schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_schedule_desc', models.CharField(max_length=100)),
                ('pipeline_schedule_name', models.CharField(max_length=100)),
                ('pipeline_detail_name', models.CharField(max_length=100)),
                ('pipeline_schedule_start_date', models.DateField(auto_now=True)),
                ('pipeline_schedule_end_date', models.DateField()),
                ('pipeline_schedule_time', models.TimeField()),
                ('pipeline_schedule_run_imme', models.BooleanField()),
                ('pipeline_status', models.BooleanField(default=True)),
                ('pipeline_det_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.pipeline_details')),
            ],
            options={
                'db_table': 'pipeline_schedule',
            },
        ),
        migrations.CreateModel(
            name='preaduit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('database_name', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'preaduit',
            },
        ),
        migrations.CreateModel(
            name='price_tables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=300)),
                ('ami', models.CharField(max_length=300)),
                ('Architecture', models.CharField(max_length=300)),
                ('Description', models.CharField(max_length=300)),
                ('Instance_Type', models.CharField(max_length=300)),
                ('Family', models.CharField(max_length=300)),
                ('Memory', models.CharField(max_length=300)),
                ('V_CPU', models.IntegerField()),
                ('Storage', models.IntegerField()),
                ('Price', models.FloatField()),
            ],
            options={
                'db_table': 'price_calculators',
            },
        ),
        migrations.CreateModel(
            name='role_api',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100, unique=True)),
                ('role_desc', models.CharField(max_length=100)),
                ('role_handling_pages', models.JSONField()),
                ('role_start_date', models.DateField()),
                ('role_end_date', models.DateField()),
                ('role_status', models.BooleanField()),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='role_details_api',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100)),
                ('role_detail_name', models.CharField(max_length=100)),
                ('role_description', models.CharField(max_length=150)),
                ('role_handling_pages', models.JSONField()),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_id', to='datahub_v3_app.role_api')),
            ],
            options={
                'db_table': 'role_details',
            },
        ),
        migrations.CreateModel(
            name='schedule_jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seconds', models.IntegerField()),
                ('minutes', models.IntegerField()),
                ('hours', models.IntegerField()),
                ('end_date', models.DateField()),
                ('run_imm', models.BooleanField()),
            ],
            options={
                'db_table': 'job_schedules',
            },
        ),
        migrations.CreateModel(
            name='schedule_log',
            fields=[
                ('run_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('schedule_id', models.IntegerField()),
                ('pipeline_id', models.IntegerField()),
                ('level', models.CharField(max_length=300)),
                ('start_time', models.DateField(auto_now=True)),
                ('status', models.CharField(max_length=200)),
                ('schedule_name', models.CharField(max_length=500)),
                ('pipeline_name', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'schedule_log',
            },
        ),
        migrations.CreateModel(
            name='ScheduleDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_schedule_dependency_name', models.CharField(max_length=50)),
                ('parent_schedule_name', models.CharField(max_length=50)),
                ('child_schedule_name', models.CharField(max_length=50)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'scheduledependency',
            },
        ),
        migrations.CreateModel(
            name='schema_audit_log',
            fields=[
                ('audit_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('run_id', models.IntegerField()),
                ('schedule_id', models.IntegerField()),
                ('start_time', models.DateField(auto_now=True)),
                ('status', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'schema_audit_log',
            },
        ),
        migrations.CreateModel(
            name='schema_error_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.IntegerField()),
                ('schedule_id', models.IntegerField()),
                ('start_time', models.DateField(auto_now=True)),
                ('status', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'schema_error_log',
            },
        ),
        migrations.CreateModel(
            name='schema_log',
            fields=[
                ('run_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('config_id', models.IntegerField()),
                ('schema_id', models.IntegerField()),
                ('status', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(null=True)),
                ('config_name', models.CharField(max_length=500)),
                ('schema_name', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'schema_log',
            },
        ),
        migrations.CreateModel(
            name='tenant_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.CharField(max_length=255, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('postalcode', models.CharField(max_length=100)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('company_reg_no', models.CharField(blank=True, max_length=100)),
                ('role', models.CharField(blank=True, max_length=100)),
                ('company_pan_no', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('tenant_id', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tenantregister',
            },
        ),
        migrations.CreateModel(
            name='user_api',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('employee_id', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=255)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'user_api',
            },
        ),
        migrations.CreateModel(
            name='users_role_view',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=300)),
                ('role_name', models.JSONField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'usersrole',
            },
        ),
        migrations.CreateModel(
            name='teams_api_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=300)),
                ('role_handling_pages', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), size=None)),
                ('tenant_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.tenant_user')),
            ],
            options={
                'db_table': 'teams_api_model',
            },
        ),
        migrations.CreateModel(
            name='sql_generator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('columns', models.JSONField()),
                ('datatype', models.JSONField()),
                ('config_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_config')),
                ('connection_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.connection_detail')),
                ('connection_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.conn')),
                ('database_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_sql_table')),
                ('page_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.pages')),
                ('pipeline_detail_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.pipeline_details')),
                ('pipeline_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.pipeline')),
                ('pipeline_schedule_dependency_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.scheduledependency')),
                ('pipeline_schedule_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.pipeline_schedule')),
                ('role_detail_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.role_details_api')),
                ('role_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.role_api')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.users_role_view')),
            ],
            options={
                'db_table': 'sql_generator',
            },
        ),
        migrations.CreateModel(
            name='spl_columnchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=200)),
                ('column', models.CharField(max_length=300)),
                ('replace', models.CharField(max_length=300)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('config_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_config')),
                ('pipeline_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.pipeline')),
            ],
            options={
                'db_table': 'spl_columnchange',
            },
        ),
        migrations.CreateModel(
            name='schema_migration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dec_name', models.CharField(max_length=300)),
                ('config_name', models.CharField(max_length=100)),
                ('source_name', models.CharField(max_length=100)),
                ('target_name', models.CharField(max_length=100)),
                ('schema_name', models.CharField(max_length=300, null=True)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('all_tables', models.BooleanField()),
                ('Play', models.BooleanField()),
                ('target_schema_name', models.CharField(max_length=100)),
                ('source_schema_name', models.CharField(max_length=100)),
                ('mail', models.EmailField(max_length=254)),
                ('source_table_name', models.JSONField()),
                ('config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_config')),
            ],
            options={
                'db_table': 'schema_migration',
            },
        ),
        migrations.CreateModel(
            name='member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(max_length=300)),
                ('mail_id', models.EmailField(max_length=254)),
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.teams_api_model')),
                ('tenant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.tenant_user')),
            ],
            options={
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='datatype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_name', models.CharField(max_length=100)),
                ('source_id', models.IntegerField()),
                ('source_name', models.CharField(max_length=100)),
                ('target_id', models.IntegerField()),
                ('target_name', models.CharField(max_length=100)),
                ('datatype_mapping_name', models.CharField(max_length=100)),
                ('datatype', models.JSONField()),
                ('config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_config')),
            ],
            options={
                'db_table': 'dtype',
            },
        ),
        migrations.CreateModel(
            name='d_transform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dec_name', models.CharField(max_length=300)),
                ('transform_name', models.CharField(max_length=100)),
                ('config_name', models.CharField(max_length=100)),
                ('source_name', models.CharField(max_length=100)),
                ('target_name', models.CharField(max_length=100)),
                ('start_date', models.DateField(auto_now=True)),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('all_tables', models.BooleanField()),
                ('target_transform_name', models.CharField(max_length=100)),
                ('source_transform_name', models.CharField(max_length=100)),
                ('source_table_name', models.JSONField()),
                ('config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_config')),
            ],
            options={
                'db_table': 'd_transform',
            },
        ),
        migrations.CreateModel(
            name='column_name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100)),
                ('column_name', models.JSONField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.db_config')),
                ('tenant_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.tenant_user')),
            ],
            options={
                'db_table': 'column_name',
            },
        ),
        migrations.CreateModel(
            name='column_config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100)),
                ('column_desc', models.JSONField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('col_config_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.column_name')),
                ('tenant_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='datahub_v3_app.tenant_user')),
            ],
            options={
                'db_table': 'column_config',
            },
        ),
    ]
